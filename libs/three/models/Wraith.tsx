/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    jumpkit_1: THREE.Mesh
    eye_base_1: THREE.Mesh
    head_1: THREE.Mesh
    body_1: THREE.Mesh
    gauntlet_1: THREE.Mesh
    helm_1: THREE.Mesh
  }
  materials: {
    wraith_jumpkit_cyberninja: THREE.MeshStandardMaterial
    wraith_eye_base: THREE.MeshStandardMaterial
    wraith_head: THREE.MeshStandardMaterial
    wraith_body_cyberninja: THREE.MeshStandardMaterial
    wraith_gauntlet_cyberninja: THREE.MeshStandardMaterial
    wraith_helm_cyberninja: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/mock/models/wraith.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 33.48, 0.01]} scale={33.54}>
        <mesh
          geometry={nodes.jumpkit_1.geometry}
          material={materials.wraith_jumpkit_cyberninja}
        />
        <mesh
          geometry={nodes.eye_base_1.geometry}
          material={materials.wraith_eye_base}
        />
        <mesh
          geometry={nodes.head_1.geometry}
          material={materials.wraith_head}
        />
        <mesh
          geometry={nodes.body_1.geometry}
          material={materials.wraith_body_cyberninja}
        />
        <mesh
          geometry={nodes.gauntlet_1.geometry}
          material={materials.wraith_gauntlet_cyberninja}
        />
        <mesh
          geometry={nodes.helm_1.geometry}
          material={materials.wraith_helm_cyberninja}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/mock/models/wraith.glb')
